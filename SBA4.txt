                                  SBA3
1,package Day_16ass;

import java.util.Scanner;

public class BubbleSortORSelectionSort   {
	void bubbleSort(int arr[])
	{ 
		int n = arr.length; //n=6
		for (int i = 0; i < n-1; i++) 
			for (int j = 0; j < n-i-1; j++) 
			{
				if (arr[j] > arr[j+1])
				{
					// swap arr[j+1] and arr[j]
					int temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
				}
			}
	}
	void printArray(int arr[])
	{
		int n = arr.length;
		for (int i=0; i<n; ++i)
			System.out.print(arr[i] + " ");
		System.out.println();
	}
	void sort(int arr[])
	{  			//1,2,3,4,6,9	
		int n = arr.length; //6

		// One by one move boundary of unsorted subarray
		for (int i = 0; i < n-1; i++) 
		{
			// Find the minimum element in unsorted array
			int min_idx = i;//
			for (int j = i+1; j < n; j++) 
				{
					if (arr[min_idx] > arr[j])
					min_idx = j;//5
			}// Swap the found minimum element with the first
			int temp = arr[min_idx];
			arr[min_idx] = arr[i];
			arr[i] = temp;
			}
		}


	public static void main(String[] args) {
		System.out.println("Ener the number of integers we want to enter ");
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] arr = new int[n];
		System.out.println("Enter the number of elements");
		for (int i = 0; i < n; i++) {
			arr[i] = sc.nextInt();
		}
		System.out.println("The array elements are");
		for (int i = 0; i < n; i++) {
			System.out.print(arr[i] + ",");
		}
		System.out.println(" ");
		System.out.println("Entere the preferred sorting:");
		System.out.println("1.BubbleSort,2.SelectionSort");
		int a=sc.nextInt();
		switch(a) {
		case 1:
			BubbleSortORSelectionSort ob = new BubbleSortORSelectionSort();
			ob.bubbleSort(arr);
			System.out.println("Sorted array");
			ob.printArray(arr);
			break;
		case 2:
			BubbleSortORSelectionSort obj = new BubbleSortORSelectionSort();
			
			obj.sort(arr);
			System.out.println("Sorted array");
			obj.printArray(arr);
			break;

		
		}
	}


}
op
Ener the number of integers we want to enter 
5
Enter the number of elements
1
2
4
5
8
The array elements are
1,2,4,5,8, 
Entere the preferred sorting:
1.BubbleSort,2.SelectionSort

1
Sorted array
1 2 4 5 8 
2,package Day_16ass;

public class InsertionSort {
	 void sort(int arr[])
	    {
	        int n = arr.length;
	        for (int i=1; i<n; ++i)
	        {
	            int key = arr[i];
	            int j = i-1;
	            while (j>=0 && arr[j] > key)
	            {
	                arr[j+1] = arr[j];
	                j = j-1;
	            }
	            arr[j+1] = key;
	        }
	    }
	  
	    static void printArray(int arr[])
	    {
	        int n = arr.length;
	        for (int i=0; i<n; ++i)
	            System.out.print(arr[i] + " ");
	  
	        System.out.println();
	    }
	public static void main(String[] args) {
		 int arr[] = {12, 11, 13, 5, 6};
		  
	        InsertionSort ob = new InsertionSort();        
	        ob.sort(arr);
	          
	        printArray(arr);
	    
	}
op
5 6 11 12 13 
3,import java.util.*;
  
public class GFG {
  
    // Main method
    public static void main(String[] args)
    {
  
        // create a table and add some values
        Map<String, Integer>
            table = new Hashtable<>();
  
        table.put("Pen", 10);
        table.put("Book", 500);
        table.put("Clothes", 400);
        table.put("Mobile", 5000);
  
        // print map details
        System.out.println("hashTable: "
                           + table.toString());
  
        // Inserting non-existing key with value
        // using putIfAbsent method
        String retValue
            = String.valueOf(table
                                 .putIfAbsent("Booklet", 2500));
  
        // Print the returned value
        System.out.println("Returned value "
                           + "for Key 'Booklet' is: "
                           + retValue);
  
        // print new mapping
        System.out.println("hashTable: "
                           + table);
  
        // Inserting existing key with value
        // using putIfAbsent method
        retValue
            = String.valueOf(table
                                 .putIfAbsent("Book", 4500));
  
        // Print the returned value
        System.out.println("Returned value"
                           + " for key 'Book' is: "
                           + retValue);
  
        // print new mapping
        System.out.println("hashTable: "
                           + table);
    }
}
op
hashTable: {Book=500, Mobile=5000, Pen=10, Clothes=400}
Returned value for Key 'Booklet' is: null
hashTable: {Book=500, Mobile=5000, Pen=10, Clothes=400, Booklet=2500}
Returned value for key 'Book' is: 500
hashTable: {Book=500, Mobile=5000, Pen=10, Clothes=400, Booklet=2500}
4,package sba;
import java.util.Hashtable;
import java.util.Map;

class Book { 
int id; 
String name,author,publisher; 
int quantity; 
public Book(int id, String name, String author, String 
publisher, int quantity) { 
 this.id = id; 
 this.name = name; 
 this.author = author; 
 this.publisher = publisher; 
 this.quantity = quantity; 
} 
}

public class Q4 {

	public static void main(String[] args) {
		Hashtable<Integer,Book> map=new
				Hashtable<Integer,Book>(); 
				 //Creating Books 
				 Book b1=new Book(101,"Let us C","Yashwant Kanetkar","BPB",8); 
				 Book b2=new Book(102,"Data Communications & Networking","Forouzan","Mc Graw Hill",4); 
				 Book b3=new Book(103,"Operating System","Galvin","Wiley",6); 
				 //Adding Books to map 
				 map.put(1,b1); 
				 map.put(2,b2); 
				 map.put(3,b3); 
				 //Traversing map 
				 for(Map.Entry<Integer, Book> z:map.entrySet()){ 
				 int key=z.getKey(); //key=3 
				 Book b=z.getValue(); //b=b3 
				 System.out.println(key+" Details:"); 
				 System.out.println(b.id+" "+b.name+" "+b.author+" "+b.publisher+" "+b.quantity); 
				 }
	}

}
op
3 Details:
103 Operating System Galvin Wiley 6
2 Details:
102 Data Communications & Networking Forouzan Mc Graw Hill 4
1 Details:
101 Let us C Yashwant Kanetkar BPB 8

